# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node TEST Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 16.x, 18.x, 20.x ]
        platform:
          - os: ubuntu-20.04
            shell: bash
        python-version: [ 3.9 ]

    runs-on: ${{ matrix.platform.os }}

    container:
      image: rust:latest
      options: --privileged --device /dev/fuse

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm@9
        run: npm i -g npm@9

      - name: Show npm version
        run: npm -v

      - name: Change directory ownership
        run: chown -R $(id -un):$(id -gn) .

      - name: Install sudo
        run: apt-get update && apt-get install -y sudo libssl-dev libpango1.0-dev nginx psmisc

      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: npm i

      - name: Run Test
        run: CARGO_BUILD_TARGET=x86_64-unknown-linux-gnu BUILD_OS=linux BUILD_ARCH=amd64 npm run ci
        env:
          NODE_OPTIONS: --max_old_space_size=6144
